{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Downloads\\\\diplom1\\\\react_diplom\\\\src\\\\reports\\\\ReportLesson.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useRef } from \"react\";\nimport ReportLessonHelper from \"./ReportLessonHelper\";\nimport classes from \"./ReportLesson.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ReportLesson(props) {\n  _s();\n\n  const [lessons, setLessons] = useState(null);\n  const [groups, setGroups] = useState(null);\n  const [chosenLessons, setChosenLessons] = useState(null);\n  const seletecGroup = useRef(\"all\");\n  const seletecTeacher = useRef(\"all\");\n  const seletecClassroom = useRef(\"all\");\n  useEffect(() => {\n    fetch(\"http://localhost:8000/lessons\").then(r => r.json()).then(d => {\n      setLessons(d);\n      setChosenLessons(d);\n    });\n    fetch(\"http://localhost:8000/groups\").then(r => r.json()).then(d => setGroups(d));\n  }, []);\n\n  const showItem = event => {\n    event.preventDefault();\n    console.log(event.target.name);\n\n    if (event.target.value === \"all\") {\n      setChosenLessons(lessons);\n    } else {\n      let chosenLs = [];\n\n      for (let i = 0; i < lessons.length; i++) {\n        let chosen = false;\n        let ls = [];\n\n        for (let j = 0; j < lessons[i].length; j++) {\n          for (let k = 0; k < lessons[i][j][\"group_ids\"].length; k++) {\n            if (lessons[i][j][\"group_ids\"][k] === event.target.value) {\n              ls.push(lessons[i][j]);\n              chosen = true;\n              break;\n            }\n          }\n        }\n\n        if (chosen) {\n          chosenLs.push(ls);\n        } else {\n          chosenLs.push([]);\n        }\n      }\n\n      setChosenLessons(chosenLs);\n    }\n  };\n\n  if (chosenLessons) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"group\",\n        name: \"group\",\n        onChange: showItem,\n        defaultValue: \"default\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          disabled: true,\n          value: \"default\",\n          children: \" -- choose group -- \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"all\",\n          children: \"All\"\n        }, \"all\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), groups && groups.map(elem => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: elem[\"group_id\"],\n            children: elem[\"group_name\"]\n          }, elem[\"group_id\"], false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 36\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"teacher\",\n        name: \"teacher\",\n        onChange: showItem,\n        defaultValue: \"default\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          disabled: true,\n          value: \"default\",\n          children: \" -- choose teacher -- \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"all\",\n          children: \"All\"\n        }, \"all\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), groups && groups.map(elem => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: elem[\"teacher_id\"],\n            children: elem[\"teacher_name\"]\n          }, elem[\"teacher_id\"], false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 36\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"classroom\",\n        name: \"classroom\",\n        onChange: showItem,\n        defaultValue: \"default\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          disabled: true,\n          value: \"default\",\n          children: \" -- choose classroom -- \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"all\",\n          children: \"All\"\n        }, \"all\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), groups && groups.map(elem => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: elem[\"classroom_id\"],\n            children: elem[\"classroom_name\"]\n          }, elem[\"classroom_id\"], false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 36\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ReportLessonHelper, {\n        data: chosenLessons\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \" Wait for a moment\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 12\n  }, this);\n}\n\n_s(ReportLesson, \"rF441/mtTuZCtkeY85Jpc2/FIck=\");\n\n_c = ReportLesson;\nexport default ReportLesson;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReportLesson\");","map":{"version":3,"sources":["C:/Users/Dell/Downloads/diplom1/react_diplom/src/reports/ReportLesson.js"],"names":["useState","useEffect","useRef","ReportLessonHelper","classes","ReportLesson","props","lessons","setLessons","groups","setGroups","chosenLessons","setChosenLessons","seletecGroup","seletecTeacher","seletecClassroom","fetch","then","r","json","d","showItem","event","preventDefault","console","log","target","name","value","chosenLs","i","length","chosen","ls","j","k","push","map","elem"],"mappings":"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","sourcesContent":["import { useState, useEffect, useRef } from \"react\";\r\nimport ReportLessonHelper from \"./ReportLessonHelper\";\r\nimport classes from \"./ReportLesson.module.css\";\r\n\r\nfunction ReportLesson(props){\r\n    const [lessons, setLessons] = useState(null);\r\n    const [groups, setGroups] = useState(null);\r\n    const [chosenLessons, setChosenLessons] = useState(null);\r\n    const seletecGroup = useRef(\"all\");\r\n    const seletecTeacher = useRef(\"all\");\r\n    const seletecClassroom = useRef(\"all\");\r\n\r\n    useEffect(() => {\r\n        fetch(\"http://localhost:8000/lessons\")\r\n        .then(r => r.json())\r\n        .then(d => {setLessons(d); setChosenLessons(d)});\r\n        \r\n        fetch(\"http://localhost:8000/groups\")\r\n        .then(r => r.json())\r\n        .then(d => setGroups(d));\r\n    }, []);\r\n\r\n    const showItem = (event) => {\r\n        event.preventDefault();\r\n        console.log(event.target.name);\r\n        if(event.target.value === \"all\"){\r\n            setChosenLessons(lessons);\r\n        }\r\n        else {\r\n            let chosenLs = [];\r\n            for(let i=0; i<lessons.length; i++)\r\n            {\r\n                let chosen = false;\r\n                let ls = [];\r\n                for(let j=0; j<lessons[i].length; j++)\r\n                {\r\n                    for(let k=0; k<lessons[i][j][\"group_ids\"].length; k++)\r\n                    {\r\n                        if(lessons[i][j][\"group_ids\"][k] === event.target.value){\r\n                            ls.push(lessons[i][j]);\r\n                            chosen = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                if(chosen){\r\n                    chosenLs.push(ls);\r\n                }\r\n                else {\r\n                    chosenLs.push([]);\r\n                }\r\n            }\r\n            setChosenLessons(chosenLs);\r\n        }\r\n    } \r\n\r\n    if(chosenLessons){\r\n        return (\r\n            <>\r\n                <select id={\"group\"} name={\"group\"}  onChange={showItem} defaultValue=\"default\">\r\n                    <option disabled value=\"default\"> -- choose group -- </option>\r\n                    <option key=\"all\" value=\"all\">All</option>\r\n                    {groups &&\r\n                        groups.map(elem => {\r\n                            return <option key={elem[\"group_id\"]} value={elem[\"group_id\"]}>\r\n                                    {elem[\"group_name\"]}\r\n                                </option>\r\n                        })}\r\n                </select>\r\n\r\n                <select id={\"teacher\"} name={\"teacher\"}  onChange={showItem} defaultValue=\"default\">\r\n                    <option disabled value=\"default\"> -- choose teacher -- </option>\r\n                    <option key=\"all\" value=\"all\">All</option>\r\n                    {groups &&\r\n                        groups.map(elem => {\r\n                            return <option key={elem[\"teacher_id\"]} value={elem[\"teacher_id\"]}>\r\n                                    {elem[\"teacher_name\"]}\r\n                                </option>\r\n                        })}\r\n                </select>\r\n\r\n                <select id={\"classroom\"} name={\"classroom\"}  onChange={showItem} defaultValue=\"default\">\r\n                    <option disabled value=\"default\"> -- choose classroom -- </option>\r\n                    <option key=\"all\" value=\"all\">All</option>\r\n                    {groups &&\r\n                        groups.map(elem => {\r\n                            return <option key={elem[\"classroom_id\"]} value={elem[\"classroom_id\"]}>\r\n                                    {elem[\"classroom_name\"]}\r\n                                </option>\r\n                        })}\r\n                </select>\r\n\r\n                <ReportLessonHelper data={chosenLessons}/>\r\n            </>\r\n        );\r\n    }\r\n    return <h1> Wait for a moment</h1>\r\n}\r\n\r\nexport default ReportLesson;"]},"metadata":{},"sourceType":"module"}