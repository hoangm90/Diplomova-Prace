{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Downloads\\\\diplom1\\\\react_diplom\\\\src\\\\reports\\\\ReportLesson.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useRef } from \"react\";\nimport ReportLessonHelper from \"./ReportLessonHelper\";\nimport classes from \"./ReportLesson.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ReportLesson(props) {\n  _s();\n\n  const [lessons, setLessons] = useState(null);\n  const [groups, setGroups] = useState(null);\n  const [chosenLessons, setChosenLessons] = useState(null);\n  const seletedGroup = useRef(\"all\");\n  const seletedTeacher = useRef(\"all\");\n  const seletedClassroom = useRef(\"all\");\n  useEffect(() => {\n    fetch(\"http://localhost:8000/lessons\").then(r => r.json()).then(d => {\n      setLessons(d);\n      setChosenLessons(d);\n    });\n    fetch(\"http://localhost:8000/groups\").then(r => r.json()).then(d => setGroups(d));\n  }, []);\n\n  const showItem = event => {\n    event.preventDefault();\n\n    switch (event.target.name) {\n      case \"group\":\n        seletedGroup.current = event.target.value;\n        break;\n\n      case \"teacher\":\n        seletedTeacher.current = event.target.value;\n        break;\n\n      case \"classroom\":\n        seletedClassroom.current = event.target.value;\n        break;\n    }\n\n    let chosenLs = [];\n\n    for (let i = 0; i < lessons.length; i++) {\n      let chosen = false;\n      let ls = [];\n\n      for (let j = 0; j < lessons[i].length; j++) {\n        for (let k = 0; k < lessons[i][j][\"group_ids\"].length; k++) {\n          if (lessons[i][j][\"group_ids\"][k] === event.target.value) {\n            ls.push(lessons[i][j]);\n            chosen = true;\n            break;\n          }\n        }\n      }\n\n      if (chosen) {\n        chosenLs.push(ls);\n      } else {\n        chosenLs.push([]);\n      }\n    }\n\n    setChosenLessons(chosenLs);\n  };\n\n  if (chosenLessons) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"group\",\n        name: \"group\",\n        onChange: showItem,\n        defaultValue: \"default\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          disabled: true,\n          value: \"default\",\n          children: \" -- choose group -- \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"all\",\n          children: \"All\"\n        }, \"all\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), groups && groups.map(elem => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: elem[\"group_id\"],\n            children: elem[\"group_name\"]\n          }, elem[\"group_id\"], false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 36\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"teacher\",\n        name: \"teacher\",\n        onChange: showItem,\n        defaultValue: \"default\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          disabled: true,\n          value: \"default\",\n          children: \" -- choose teacher -- \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"all\",\n          children: \"All\"\n        }, \"all\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), groups && groups.map(elem => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: elem[\"teacher_id\"],\n            children: elem[\"teacher_name\"]\n          }, elem[\"teacher_id\"], false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 36\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"classroom\",\n        name: \"classroom\",\n        onChange: showItem,\n        defaultValue: \"default\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          disabled: true,\n          value: \"default\",\n          children: \" -- choose classroom -- \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"all\",\n          children: \"All\"\n        }, \"all\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), groups && groups.map(elem => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: elem[\"classroom_id\"],\n            children: elem[\"classroom_name\"]\n          }, elem[\"classroom_id\"], false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 36\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ReportLessonHelper, {\n        data: chosenLessons\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \" Wait for a moment\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 12\n  }, this);\n}\n\n_s(ReportLesson, \"L2Wb5rB37RbPWo05o5Kzrzy4EOE=\");\n\n_c = ReportLesson;\nexport default ReportLesson;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReportLesson\");","map":{"version":3,"sources":["C:/Users/Dell/Downloads/diplom1/react_diplom/src/reports/ReportLesson.js"],"names":["useState","useEffect","useRef","ReportLessonHelper","classes","ReportLesson","props","lessons","setLessons","groups","setGroups","chosenLessons","setChosenLessons","seletedGroup","seletedTeacher","seletedClassroom","fetch","then","r","json","d","showItem","event","preventDefault","target","name","current","value","chosenLs","i","length","chosen","ls","j","k","push","map","elem"],"mappings":"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","sourcesContent":["import { useState, useEffect, useRef } from \"react\";\r\nimport ReportLessonHelper from \"./ReportLessonHelper\";\r\nimport classes from \"./ReportLesson.module.css\";\r\n\r\nfunction ReportLesson(props){\r\n    const [lessons, setLessons] = useState(null);\r\n    const [groups, setGroups] = useState(null);\r\n    const [chosenLessons, setChosenLessons] = useState(null);\r\n    const seletedGroup = useRef(\"all\");\r\n    const seletedTeacher = useRef(\"all\");\r\n    const seletedClassroom = useRef(\"all\");\r\n\r\n    useEffect(() => {\r\n        fetch(\"http://localhost:8000/lessons\")\r\n        .then(r => r.json())\r\n        .then(d => {setLessons(d); setChosenLessons(d)});\r\n        \r\n        fetch(\"http://localhost:8000/groups\")\r\n        .then(r => r.json())\r\n        .then(d => setGroups(d));\r\n    }, []);\r\n\r\n    const showItem = (event) => {\r\n        event.preventDefault(); \r\n        switch(event.target.name){\r\n            case \"group\": seletedGroup.current = event.target.value; break;\r\n            case \"teacher\": seletedTeacher.current = event.target.value; break;\r\n            case \"classroom\": seletedClassroom.current = event.target.value; break;\r\n        }   \r\n        let chosenLs = [];\r\n        for(let i=0; i<lessons.length; i++)\r\n        {\r\n            let chosen = false;\r\n            let ls = [];\r\n            for(let j=0; j<lessons[i].length; j++)\r\n            {\r\n                for(let k=0; k<lessons[i][j][\"group_ids\"].length; k++)\r\n                {\r\n                    if(lessons[i][j][\"group_ids\"][k] === event.target.value){\r\n                        ls.push(lessons[i][j]);\r\n                        chosen = true;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            if(chosen){\r\n                chosenLs.push(ls);\r\n            }\r\n            else {\r\n                chosenLs.push([]);\r\n            }\r\n        }\r\n        setChosenLessons(chosenLs);\r\n    }\r\n\r\n    if(chosenLessons){\r\n        return (\r\n            <>\r\n                <select id={\"group\"} name={\"group\"}  onChange={showItem} defaultValue=\"default\">\r\n                    <option disabled value=\"default\"> -- choose group -- </option>\r\n                    <option key=\"all\" value=\"all\">All</option>\r\n                    {groups &&\r\n                        groups.map(elem => {\r\n                            return <option key={elem[\"group_id\"]} value={elem[\"group_id\"]}>\r\n                                    {elem[\"group_name\"]}\r\n                                </option>\r\n                        })}\r\n                </select>\r\n\r\n                <select id={\"teacher\"} name={\"teacher\"}  onChange={showItem} defaultValue=\"default\">\r\n                    <option disabled value=\"default\"> -- choose teacher -- </option>\r\n                    <option key=\"all\" value=\"all\">All</option>\r\n                    {groups &&\r\n                        groups.map(elem => {\r\n                            return <option key={elem[\"teacher_id\"]} value={elem[\"teacher_id\"]}>\r\n                                    {elem[\"teacher_name\"]}\r\n                                </option>\r\n                        })}\r\n                </select>\r\n\r\n                <select id={\"classroom\"} name={\"classroom\"}  onChange={showItem} defaultValue=\"default\">\r\n                    <option disabled value=\"default\"> -- choose classroom -- </option>\r\n                    <option key=\"all\" value=\"all\">All</option>\r\n                    {groups &&\r\n                        groups.map(elem => {\r\n                            return <option key={elem[\"classroom_id\"]} value={elem[\"classroom_id\"]}>\r\n                                    {elem[\"classroom_name\"]}\r\n                                </option>\r\n                        })}\r\n                </select>\r\n\r\n                <ReportLessonHelper data={chosenLessons}/>\r\n            </>\r\n        );\r\n    }\r\n    return <h1> Wait for a moment</h1>\r\n}\r\n\r\nexport default ReportLesson;"]},"metadata":{},"sourceType":"module"}