{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Downloads\\\\diplom1\\\\react_diplom\\\\src\\\\reports\\\\ReportLesson.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useRef } from \"react\";\nimport ReportLessonHelper from \"./ReportLessonHelper\";\nimport classes from \"./ReportLesson.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ReportLesson(props) {\n  _s();\n\n  const [lessons, setLessons] = useState(null);\n  const [groups, setGroups] = useState(null);\n  const [teachers, setTeachers] = useState(null);\n  const [classrooms, setClassrooms] = useState(null);\n  const [chosenLessons, setChosenLessons] = useState(null);\n  const selectedGroup = useRef(\"all\");\n  const selectedTeacher = useRef(\"all\");\n  const selectedClassroom = useRef(\"all\");\n  useEffect(() => {\n    fetch(\"http://localhost:8000/lessons\").then(r => r.json()).then(d => {\n      setLessons(d);\n      setChosenLessons(d);\n    });\n    fetch(\"http://localhost:8000/groups\").then(r => r.json()).then(d => setGroups(d));\n    fetch(\"http://localhost:8000/teachers\").then(r => r.json()).then(d => setTeachers(d));\n    fetch(\"http://localhost:8000/classrooms\").then(r => r.json()).then(d => setClassrooms(d));\n  }, []);\n\n  const showItem = event => {\n    event.preventDefault();\n\n    switch (event.target.name) {\n      case \"group\":\n        selectedGroup.current = event.target.value;\n        break;\n\n      case \"teacher\":\n        selectedTeacher.current = event.target.value;\n        break;\n\n      case \"classroom\":\n        selectedClassroom.current = event.target.value;\n        break;\n    }\n\n    let chosenLs = [];\n\n    for (let i = 0; i < lessons.length; i++) {\n      let chosen = false;\n      let ls = [];\n\n      for (let j = 0; j < lessons[i].length; j++) {\n        let chosenC = false;\n        let chosenG = false;\n        let chosenT = false;\n\n        if (selectedClassroom.current === \"all\" || selectedClassroom.current === lessons[i][j][\"chosen_classroom_id\"]) {\n          chosenC = true;\n        } else {\n          chosenC = false;\n        }\n\n        if (chosenC) {\n          if (selectedGroup.current !== \"all\") {\n            for (let k = 0; k < lessons[i][j][\"group_ids\"].length; k++) {\n              if (lessons[i][j][\"group_ids\"][k] === event.target.value) {\n                chosenG = true;\n                break;\n              }\n            }\n          } else {\n            chosenG = true;\n          }\n        }\n\n        if (chosenC && chosenG) {\n          if (selectedTeacher.current !== \"all\") {\n            for (let k = 0; k < lessons[i][j][\"teacher_ids\"].length; k++) {\n              if (lessons[i][j][\"teacher_ids\"][k] === event.target.value) {\n                chosenT = true;\n                break;\n              }\n            }\n          } else {\n            chosenT = true;\n          }\n        }\n\n        if (chosenC && chosenG && chosenT) {\n          chosen = true;\n          ls.push(lessons[i][j]);\n        }\n      }\n\n      if (chosen) {\n        chosenLs.push(ls);\n      } else {\n        chosenLs.push([]);\n      }\n    }\n\n    setChosenLessons(chosenLs);\n  };\n\n  if (chosenLessons) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"group\",\n        name: \"group\",\n        onChange: showItem,\n        defaultValue: \"default\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          disabled: true,\n          value: \"default\",\n          children: \" -- choose group -- \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"all\",\n          children: \"All\"\n        }, \"all\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), groups && groups.map(elem => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: elem[\"group_id\"],\n            children: elem[\"group_name\"]\n          }, elem[\"group_id\"], false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 36\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"teacher\",\n        name: \"teacher\",\n        onChange: showItem,\n        defaultValue: \"default\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          disabled: true,\n          value: \"default\",\n          children: \" -- choose teacher -- \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"all\",\n          children: \"All\"\n        }, \"all\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), teachers && teachers.map(elem => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: elem[\"teacher_id\"],\n            children: elem[\"teacher_name\"]\n          }, elem[\"teacher_id\"], false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 36\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"classroom\",\n        name: \"classroom\",\n        onChange: showItem,\n        defaultValue: \"default\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          disabled: true,\n          value: \"default\",\n          children: \" -- choose classroom -- \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"all\",\n          children: \"All\"\n        }, \"all\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this), classrooms && classrooms.map(elem => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: elem[\"classroom_id\"],\n            children: elem[\"classroom_name\"]\n          }, elem[\"classroom_id\"], false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 36\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ReportLessonHelper, {\n        data: chosenLessons\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \" Wait for a moment\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 12\n  }, this);\n}\n\n_s(ReportLesson, \"EKA+rVuyKIZHteikyy5MlBfPpSU=\");\n\n_c = ReportLesson;\nexport default ReportLesson;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReportLesson\");","map":{"version":3,"sources":["C:/Users/Dell/Downloads/diplom1/react_diplom/src/reports/ReportLesson.js"],"names":["useState","useEffect","useRef","ReportLessonHelper","classes","ReportLesson","props","lessons","setLessons","groups","setGroups","teachers","setTeachers","classrooms","setClassrooms","chosenLessons","setChosenLessons","selectedGroup","selectedTeacher","selectedClassroom","fetch","then","r","json","d","showItem","event","preventDefault","target","name","current","value","chosenLs","i","length","chosen","ls","j","chosenC","chosenG","chosenT","k","push","map","elem"],"mappings":"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","sourcesContent":["import { useState, useEffect, useRef } from \"react\";\r\nimport ReportLessonHelper from \"./ReportLessonHelper\";\r\nimport classes from \"./ReportLesson.module.css\";\r\n\r\nfunction ReportLesson(props){\r\n    const [lessons, setLessons] = useState(null);\r\n    const [groups, setGroups] = useState(null);\r\n    const [teachers, setTeachers] = useState(null);\r\n    const [classrooms, setClassrooms] = useState(null);\r\n    const [chosenLessons, setChosenLessons] = useState(null);\r\n    const selectedGroup = useRef(\"all\");\r\n    const selectedTeacher = useRef(\"all\");\r\n    const selectedClassroom = useRef(\"all\");\r\n\r\n    useEffect(() => {\r\n        fetch(\"http://localhost:8000/lessons\")\r\n        .then(r => r.json())\r\n        .then(d => {setLessons(d); setChosenLessons(d)});\r\n        \r\n        fetch(\"http://localhost:8000/groups\")\r\n        .then(r => r.json())\r\n        .then(d => setGroups(d));\r\n\r\n        fetch(\"http://localhost:8000/teachers\")\r\n        .then(r => r.json())\r\n        .then(d => setTeachers(d));\r\n\r\n        fetch(\"http://localhost:8000/classrooms\")\r\n        .then(r => r.json())\r\n        .then(d => setClassrooms(d));\r\n    }, []);\r\n\r\n    const showItem = (event) => {\r\n        event.preventDefault(); \r\n        switch(event.target.name){\r\n            case \"group\": selectedGroup.current = event.target.value; break;\r\n            case \"teacher\": selectedTeacher.current = event.target.value; break;\r\n            case \"classroom\": selectedClassroom.current = event.target.value; break;\r\n        }   \r\n        let chosenLs = [];\r\n        for(let i=0; i<lessons.length; i++)\r\n        {\r\n            let chosen = false;\r\n            let ls = [];\r\n            for(let j=0; j<lessons[i].length; j++)\r\n            {\r\n                let chosenC = false;\r\n                let chosenG = false;\r\n                let chosenT = false;\r\n                if(selectedClassroom.current === \"all\" || selectedClassroom.current === lessons[i][j][\"chosen_classroom_id\"])\r\n                {\r\n                    chosenC = true;\r\n                }\r\n                else {chosenC = false;}\r\n                if(chosenC)\r\n                {                      \r\n                    if (selectedGroup.current !== \"all\")\r\n                    {\r\n                        for(let k=0; k<lessons[i][j][\"group_ids\"].length; k++)\r\n                        {\r\n                            if(lessons[i][j][\"group_ids\"][k] === event.target.value){\r\n                                chosenG = true;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                    else {chosenG = true;}\r\n                }\r\n                if(chosenC && chosenG)\r\n                {                      \r\n                    if (selectedTeacher.current !== \"all\")\r\n                    {\r\n                        for(let k=0; k<lessons[i][j][\"teacher_ids\"].length; k++)\r\n                        {\r\n                            if(lessons[i][j][\"teacher_ids\"][k] === event.target.value){\r\n                                chosenT = true;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                    else {chosenT = true;}\r\n                }\r\n                if(chosenC && chosenG && chosenT){\r\n                    chosen = true;\r\n                    ls.push(lessons[i][j]);\r\n                }\r\n            }\r\n            if(chosen){\r\n                chosenLs.push(ls);\r\n            }\r\n            else {\r\n                chosenLs.push([]);\r\n            }\r\n        }\r\n        setChosenLessons(chosenLs);\r\n    }\r\n\r\n    if(chosenLessons){\r\n        return (\r\n            <>\r\n                <select id={\"group\"} name={\"group\"}  onChange={showItem} defaultValue=\"default\">\r\n                    <option disabled value=\"default\"> -- choose group -- </option>\r\n                    <option key=\"all\" value=\"all\">All</option>\r\n                    {groups &&\r\n                        groups.map(elem => {\r\n                            return <option key={elem[\"group_id\"]} value={elem[\"group_id\"]}>\r\n                                    {elem[\"group_name\"]}\r\n                                </option>\r\n                        })}\r\n                </select>\r\n\r\n                <select id={\"teacher\"} name={\"teacher\"}  onChange={showItem} defaultValue=\"default\">\r\n                    <option disabled value=\"default\"> -- choose teacher -- </option>\r\n                    <option key=\"all\" value=\"all\">All</option>\r\n                    {teachers &&\r\n                        teachers.map(elem => {\r\n                            return <option key={elem[\"teacher_id\"]} value={elem[\"teacher_id\"]}>\r\n                                    {elem[\"teacher_name\"]}\r\n                                </option>\r\n                        })}\r\n                </select>\r\n\r\n                <select id={\"classroom\"} name={\"classroom\"}  onChange={showItem} defaultValue=\"default\">\r\n                    <option disabled value=\"default\"> -- choose classroom -- </option>\r\n                    <option key=\"all\" value=\"all\">All</option>\r\n                    {classrooms &&\r\n                        classrooms.map(elem => {\r\n                            return <option key={elem[\"classroom_id\"]} value={elem[\"classroom_id\"]}>\r\n                                    {elem[\"classroom_name\"]}\r\n                                </option>\r\n                        })}\r\n                </select>\r\n\r\n                <ReportLessonHelper data={chosenLessons}/>\r\n            </>\r\n        );\r\n    }\r\n    return <h1> Wait for a moment</h1>\r\n}\r\n\r\nexport default ReportLesson;"]},"metadata":{},"sourceType":"module"}